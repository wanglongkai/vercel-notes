import{_ as e,o as t,c as o,V as n}from"./chunks/framework.74edd467.js";const u=JSON.parse('{"title":"JavaScript宽高和偏移","description":"","frontmatter":{},"headers":[],"relativePath":"ECMAScript/hw_offset.md","filePath":"ECMAScript/hw_offset.md"}'),a={name:"ECMAScript/hw_offset.md"},l=n('<h1 id="javascript宽高和偏移" tabindex="-1">JavaScript宽高和偏移 <a class="header-anchor" href="#javascript宽高和偏移" aria-label="Permalink to &quot;JavaScript宽高和偏移&quot;">​</a></h1><blockquote><p>详解请阅：window、Element、HTMLElement、MouseEvent 四个对象。</p></blockquote><h2 id="window相关" tabindex="-1">window相关 <a class="header-anchor" href="#window相关" aria-label="Permalink to &quot;window相关&quot;">​</a></h2><p><strong>window.innerHeight/Width</strong>:浏览器视口高度/宽度(包括滚动条)。</p><p><strong>window.outerHeight/Width</strong>:浏览器屏幕高度/宽度(包括滚动条，不包括状态栏)。</p><h2 id="window-screen相关" tabindex="-1">window.screen相关 <a class="header-anchor" href="#window-screen相关" aria-label="Permalink to &quot;window.screen相关&quot;">​</a></h2><p><strong>window.screen.height/width</strong>:电脑屏幕高度/宽度。</p><p><strong>window.screen.availHeight/availWidth</strong>:电脑屏幕可用高度/宽度(不包括状态栏)。</p><p><strong>window.screenTop/screenLeft</strong>:电脑屏幕顶部和左部与浏览器顶部和左部的距离。</p><p><strong>window.screenY/screenX</strong>:相当于<strong>window.screenTop/screenLeft</strong>。</p><p><strong>window.scrollX/scrollY</strong>:相当于document.body.scrollLeft/scrollTop值。</p><p><strong>window.pageXOffset/pageYOffset:<strong>相当于</strong>window.scrollX/scrollY</strong></p><h2 id="element-clientheight-clientwidth" tabindex="-1">Element.clientHeight/clientWidth <a class="header-anchor" href="#element-clientheight-clientwidth" aria-label="Permalink to &quot;Element.clientHeight/clientWidth&quot;">​</a></h2><p>只读</p><p>元素<span style="color:red;"> CSS <code>height/width</code> + CSS <code>padding</code> - 滚动条高度 </span>(如果存在)。如果元素没有设置css属性，那么clientHeight/clientWidht的值取决于元素内容。</p><p>备注：document.body也是一个元素==&gt;<strong>body元素</strong>。</p><p>换言之，这<span style="color:red;">两个属性值是动态的</span>。</p><h2 id="element-scrollheight-scrollwidth" tabindex="-1">Element.scrollHeight/scrollWidth <a class="header-anchor" href="#element-scrollheight-scrollwidth" aria-label="Permalink to &quot;Element.scrollHeight/scrollWidth&quot;">​</a></h2><p>只读</p><p>元素内容高度和宽度，包括溢出导致的不可见内容。包括padding但不包括border和margin。</p><p>也就是<span style="color:red;">元素实实在在的content+padding的大小</span></p><h2 id="element-clientleft-clienttop" tabindex="-1">Element.clientLeft/clientTop <a class="header-anchor" href="#element-clientleft-clienttop" aria-label="Permalink to &quot;Element.clientLeft/clientTop&quot;">​</a></h2><p>只读</p><p>元素的左边框和上边框的宽度，不包括margin和padding。</p><p>备注：document.body也是一个元素==&gt;<strong>body元素</strong></p><h2 id="element-scrollleft-scrolltop" tabindex="-1">Element.scrollLeft/scrollTop <a class="header-anchor" href="#element-scrollleft-scrolltop" aria-label="Permalink to &quot;Element.scrollLeft/scrollTop&quot;">​</a></h2><p>可读可写</p><p><span style="color:red;">获取或设置滚动的距离</span>。对于body元素而言，该值就是页面在视口上部和左部溢出的部分。</p><h2 id="htmlelement-offsetheight-offsetwidth" tabindex="-1">HTMLElement.offsetHeight/offsetWidth <a class="header-anchor" href="#htmlelement-offsetheight-offsetwidth" aria-label="Permalink to &quot;HTMLElement.offsetHeight/offsetWidth&quot;">​</a></h2><p>只读</p><p>元素的像素高度和宽度，包含该元素的<code>content+padding+border</code>，且是一个整数。如果出现滚动条，也包括滚动条的宽高。</p><h2 id="htmlelement-offsetleft-offsettop" tabindex="-1">HTMLElement.offsetLeft/offsetTop <a class="header-anchor" href="#htmlelement-offsetleft-offsettop" aria-label="Permalink to &quot;HTMLElement.offsetLeft/offsetTop&quot;">​</a></h2><p>只读</p><p>返回<code>当前元素左/上border外边界</code>相对于offsetParent元素的<code>左/上border内边界</code>的偏移值。(通常只用在position不为static的元素上)</p><h2 id="mouseevent-clientx-y" tabindex="-1">MouseEvent.clientX/Y <a class="header-anchor" href="#mouseevent-clientx-y" aria-label="Permalink to &quot;MouseEvent.clientX/Y&quot;">​</a></h2><p>只读</p><p>鼠标事件相对于浏览器可视区左上角的坐标</p><h2 id="mouseevent-pagex-y" tabindex="-1">MouseEvent.pageX/Y <a class="header-anchor" href="#mouseevent-pagex-y" aria-label="Permalink to &quot;MouseEvent.pageX/Y&quot;">​</a></h2><p>只读</p><p>鼠标事件相对于整个网页左上角的坐标</p><h2 id="mouseevent-screenx-y" tabindex="-1">MouseEvent.screenX/Y <a class="header-anchor" href="#mouseevent-screenx-y" aria-label="Permalink to &quot;MouseEvent.screenX/Y&quot;">​</a></h2><p>只读</p><p>鼠标事件相对于电脑屏幕左上角的坐标</p><h2 id="mouseevent-offsetx-y" tabindex="-1">MouseEvent.offsetX/Y <a class="header-anchor" href="#mouseevent-offsetx-y" aria-label="Permalink to &quot;MouseEvent.offsetX/Y&quot;">​</a></h2><p>只读</p><p>鼠标事件相对于事件源元素左上角padding外边界的坐标</p><h2 id="mouseevent-x-y" tabindex="-1">MouseEvent.X/Y <a class="header-anchor" href="#mouseevent-x-y" aria-label="Permalink to &quot;MouseEvent.X/Y&quot;">​</a></h2><p>只读</p><p>MouseEvent.clientX/Y的别名</p>',49),r=[l];function s(i,c,d,h,p,f){return t(),o("div",null,r)}const g=e(a,[["render",s]]);export{u as __pageData,g as default};
