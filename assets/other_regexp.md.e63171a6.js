import{_ as s,o as a,c as n,V as l}from"./chunks/framework.74edd467.js";const A=JSON.parse('{"title":"JavaScript正则表达式","description":"","frontmatter":{},"headers":[],"relativePath":"other/regexp.md","filePath":"other/regexp.md"}'),o={name:"other/regexp.md"},p=l(`<h1 id="javascript正则表达式" tabindex="-1">JavaScript正则表达式 <a class="header-anchor" href="#javascript正则表达式" aria-label="Permalink to &quot;JavaScript正则表达式&quot;">​</a></h1><h2 id="使用正则表达式的方法" tabindex="-1">使用正则表达式的方法 <a class="header-anchor" href="#使用正则表达式的方法" aria-label="Permalink to &quot;使用正则表达式的方法&quot;">​</a></h2><p><strong>RegExp:</strong></p><ol><li>exec--返回数组，未匹配则返回null。</li><li>test--返回true或false。</li></ol><p><strong>String：</strong></p><ol><li>match--返回数组，未匹配在返回null。</li><li>search--返回位置索引，未匹配则返回-1</li><li>replace--替换匹配的子字符串。</li><li>split--用匹配正则的字符串分割原字符串。</li><li>matchAll- 和match很像，不过他返回迭代器。不常用。</li></ol><h2 id="方法使用举例" tabindex="-1">方法使用举例 <a class="header-anchor" href="#方法使用举例" aria-label="Permalink to &quot;方法使用举例&quot;">​</a></h2><h3 id="regexp-test" tabindex="-1">RegExp.test() <a class="header-anchor" href="#regexp-test" aria-label="Permalink to &quot;RegExp.test()&quot;">​</a></h3><p><strong>目的</strong>:查看目标字符串中是否能匹配到子串，返回true或false。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello world!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> reg </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(reg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(str))</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//true</span></span></code></pre></div><h3 id="regexp-exec" tabindex="-1">RegExp.exec() <a class="header-anchor" href="#regexp-exec" aria-label="Permalink to &quot;RegExp.exec()&quot;">​</a></h3><p><strong>目的</strong>:返回一个匹配数组。 数组的第0项是匹配到的完整子串， 第1-n项时捕获分组的子串。 还有index和input两项，分别是完整子串的索引值和原始字符串</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str8 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">The Quick Brown Fox Jumps Over The Lazy Dog</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> reg7 </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">quick\\s</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">brown</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">+(</span><span style="color:#C3E88D;">jumps</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">ig</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(reg7</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(str8))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//[&quot;Quick Brown Fox Jumps&quot;, &quot;Brown&quot;, &quot;Jumps&quot;, index: 4, input: &quot;The Quick Brown Fox Jumps Over The Lazy Dog&quot;, groups:undefined]</span></span></code></pre></div><h3 id="str-match" tabindex="-1">str.match() <a class="header-anchor" href="#str-match" aria-label="Permalink to &quot;str.match()&quot;">​</a></h3><p><strong>目的</strong>:在字符串中寻找匹配的子串，并以数组的形式返回。<br> 使用时分两种情况，<code>有g标识和没有g标识</code>。<br> 有g标识时，返回一个匹配到所有子串的数组。<br> 没有g标识时，和RegExp.exec()的效果一样。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">找到字符串中的所有数字</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str5 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dgfhfgh254bhd1ku289fgdhdy675gfh</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> reg4 </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(str5</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(reg4))</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//[&quot;254&quot;, &quot;1&quot;, &quot;289&quot;, &quot;675&quot;]</span></span></code></pre></div><h3 id="str-search" tabindex="-1">str.search() <a class="header-anchor" href="#str-search" aria-label="Permalink to &quot;str.search()&quot;">​</a></h3><p><strong>目的</strong>:在目标字符串中匹配子串，如果匹配到，就返回<strong>第一次</strong>匹配到的索引，否则返回-1.</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str6 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">This is a Chinese chractor 汉字</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> reg5 </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#C3E88D;">\\u4e00-\\u9fa5</span><span style="color:#89DDFF;">]/</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//匹配单个汉字</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(str6</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">search</span><span style="color:#A6ACCD;">(reg5))</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//27</span></span></code></pre></div><h3 id="str-replace" tabindex="-1">str.replace() <a class="header-anchor" href="#str-replace" aria-label="Permalink to &quot;str.replace()&quot;">​</a></h3><p><strong>目的</strong>:将目标字符串中匹配到的子串替换成指定的子串。<br> 返回：新的字符串。<br> 关键注意：<strong>第二个参数可以是函数。</strong></p><p>实例1：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//字符串去重：aaabbbccc变成abc</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> str1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">aaabbbbcccc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> reg1 </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/(</span><span style="color:#C3E88D;">\\w</span><span style="color:#89DDFF;">)</span><span style="color:#F78C6C;">\\1</span><span style="color:#89DDFF;">+/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* var result1 = str1.replace(reg1,&quot;$1&quot;);*/</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> str1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(reg1</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">match</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">p1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">offset</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">p1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result1)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//abc</span></span></code></pre></div><p>实例2：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//10000000000 变为10.000.000.000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> str2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1000000000000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> reg2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/(?=((</span><span style="color:#89DDFF;font-style:italic;">\\B</span><span style="color:#89DDFF;">)(</span><span style="color:#C3E88D;">\\w</span><span style="color:#89DDFF;">{3})*)</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> str2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(reg2</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result2)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//10.000.000.000</span></span></code></pre></div><p>实例3：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//转小驼峰</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> str3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">the-first-name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> reg3 </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">\\w</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> str3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(reg3</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">$</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">$1</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">$1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toUpperCase</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result3)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//theFirstName</span></span></code></pre></div><h3 id="str-split" tabindex="-1">str.split() <a class="header-anchor" href="#str-split" aria-label="Permalink to &quot;str.split()&quot;">​</a></h3><p><strong>目的</strong>:将字符串分割成片段，并以数组形式返回<br><code>第一个参数</code>指定在哪儿分割，<code>第二个参数</code>指定返回数组的长度</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str7 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">I am test split method</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> reg6 </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">\\s</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(str7</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#A6ACCD;">(reg6</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// [&quot;I&quot;, &quot;am&quot;, &quot;test&quot;]</span></span></code></pre></div><h2 id="正向断言和负向断言理解" tabindex="-1">正向断言和负向断言理解 <a class="header-anchor" href="#正向断言和负向断言理解" aria-label="Permalink to &quot;正向断言和负向断言理解&quot;">​</a></h2><p><strong>正向断言(?=xxx)</strong>: 目标字符串之后<strong>必须</strong>是断言的内容。</p><p>比如:</p><div class="language-javaScript"><button title="Copy Code" class="copy"></button><span class="lang">javaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> reg1 </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">我是</span><span style="color:#89DDFF;">(?=</span><span style="color:#C3E88D;">中国人</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*该正则的意思是：匹配“我是”目标字符串，且后面“必须”紧跟中国人*/</span></span></code></pre></div><p><strong>负向断言(?!xxx):<strong>目标字符串之后</strong>不能</strong>是断言内容，其他任何内容都可以。</p><p>比如：</p><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> reg2 </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">我是</span><span style="color:#89DDFF;">(?!</span><span style="color:#C3E88D;">日本人</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*该正则的意思是：匹配“我是”目标字符串，且后面不能是日本人*/</span></span></code></pre></div><p>我们可以把正向断言和负向断言看作是两个<strong>条件</strong>：<code>必须是</code>和<code>不能是</code>。</p><p>对于上面的两个正则，我们可以这么理解：</p><blockquote><p>匹配“我是”，<code>条件</code>是<code>我是</code>后面<code>必须是</code>“中国人”， 匹配“我是”，<code>条件</code>是<code>我是</code>后面<code>不能是</code>“日本人”。</p></blockquote><p>看如下正则：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> reg </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/(?=</span><span style="color:#C3E88D;">nihao</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span></span></code></pre></div><blockquote><p>如何理解？</p><p>​ 没有匹配内容，但它后面必须是“nihao”。可以解释为：只要后面紧跟&quot;nihao&quot;都被匹配。</p></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> reg </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/(?!</span><span style="color:#C3E88D;">nihao</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span></span></code></pre></div><blockquote><p>如何理解？</p><p>​ 没有匹配内容，但它后面不能是“你好”。可以理解为：只要后面不紧跟“nihao”都被匹配。</p></blockquote>`,45),e=[p];function t(c,r,D,y,F,i){return a(),n("div",null,e)}const g=s(o,[["render",t]]);export{A as __pageData,g as default};
