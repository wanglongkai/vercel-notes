import{_ as o,o as a,c as s,V as e}from"./chunks/framework.74edd467.js";const F=JSON.parse('{"title":"HTTP cookies详解","description":"","frontmatter":{},"headers":[],"relativePath":"ECMAScript/cookies.md","filePath":"ECMAScript/cookies.md"}'),n={name:"ECMAScript/cookies.md"},p=e('<h1 id="http-cookies详解" tabindex="-1">HTTP cookies详解 <a class="header-anchor" href="#http-cookies详解" aria-label="Permalink to &quot;HTTP cookies详解&quot;">​</a></h1><h2 id="cookie是什么" tabindex="-1">cookie是什么 <a class="header-anchor" href="#cookie是什么" aria-label="Permalink to &quot;cookie是什么&quot;">​</a></h2><p>cookie是浏览器存储在用户电脑上的一小段文本文件；是<code>纯文本格式</code>，不包含任何可执行的代码。一个 Web 页面或服务器告知浏览器按照一定规范来储存这些信息，并在随后的请求中将这些信息发送至服务器，Web 服务器就可以使用这些信息来<code>识别不同的用户</code>。</p><br><h2 id="创建cookie" tabindex="-1">创建cookie <a class="header-anchor" href="#创建cookie" aria-label="Permalink to &quot;创建cookie&quot;">​</a></h2><p>Web服务器通过发送给浏览器一个<code>Set-Cookie</code>的HTTP消息头来创建一个cookie。<code>Set-Cookie</code>消息头是一个字符串，格式如下：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Set</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Cookie</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> value[; expires</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">date][; domain</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">domain][; path</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">path][; secure]</span></span></code></pre></div><p>浏览器接收到<code>Set-Cookie</code>后，会在随后的每次请求头中设置<code>Cookie</code>选项。并且只包含<code>cookie</code>的值，<strong>忽略全部设置选项</strong>。例如：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Cookie</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">name1</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">value1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> name2</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">value2</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> value3</span></span></code></pre></div><p>所以我们用<code>document.cookie</code>获取的cookie是<code>name1=vlaue1; name2=value2</code>字符串，而没有<code>expires、path</code>等设置选项。</p><br><h2 id="expires过期时间选项" tabindex="-1"><code>expires</code>过期时间选项 <a class="header-anchor" href="#expires过期时间选项" aria-label="Permalink to &quot;`expires`过期时间选项&quot;">​</a></h2><p><code>expires</code>选项指定cookie的过期时间。</p><p>超过这个时间的cookie就不会随请求发送至服务器了，而是被浏览器<strong>删除</strong>。</p><p>格式如下：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Set</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Cookie</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> name</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">Nicholas</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> expires</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">Sat</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">02</span><span style="color:#A6ACCD;"> May </span><span style="color:#F78C6C;">2009</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">38</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">25</span><span style="color:#A6ACCD;"> GMT</span></span></code></pre></div><ul><li><p>没有设置<code>expires</code>选项时，该cookie会在当前会话结束时失效。</p></li><li><p>如果<code>expires</code>设置了一个过去的时间点，那么该cookie会被立刻删除掉。<strong>删除指定<code>cookie</code>的唯一方法。</strong></p></li></ul><br><h2 id="domain作用域选项" tabindex="-1"><code>domain</code>作用域选项 <a class="header-anchor" href="#domain作用域选项" aria-label="Permalink to &quot;`domain`作用域选项&quot;">​</a></h2><p><code>domain</code>选项指定cookie在哪个或哪些域中有效。</p><p>默认情况下，<code>domain</code>会被设置为创建该cookie的页面所在的域名，所以当给相同域名发送请求时该cookie会被发送至服务器。</p><p>格式如下：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Set</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Cookie</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> name</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">Nicholas</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> domain</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">wlk</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span></span></code></pre></div><p>如上，<code>name=Nicholas</code>cookie项就会在所有的<code>*.wlk.com</code>域名中有效。</p><br><h2 id="path路径选项" tabindex="-1"><code>path</code>路径选项 <a class="header-anchor" href="#path路径选项" aria-label="Permalink to &quot;`path`路径选项&quot;">​</a></h2><p><code>path</code>选项指定了请求的URL中必须存在指定的路径时，该cookie项才会有效。</p><p>格式如下：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Set</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Cookie</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">Nicholas</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">=/</span><span style="color:#A6ACCD;">blog</span></span></code></pre></div><p>如上，<code>path</code> 选项值会与 <code>/blog</code>，<code>/bloganything</code> 等等相匹配；任何以 <code>/blog</code> 开头的路径都是有效的。需要注意的是，只有在 <code>domain</code> 选项核实完毕之后才会对 <code>path</code> 属性进行比较。<code>path</code> 属性的默认值是发送 <code>Set-Cookie</code> 消息头所对应的 URL 中的 <code>path</code> 部分。</p><br><h2 id="secure安全选项" tabindex="-1"><code>secure</code>安全选项 <a class="header-anchor" href="#secure安全选项" aria-label="Permalink to &quot;`secure`安全选项&quot;">​</a></h2><p><strong>最后一个选项</strong>是 <code>secure</code>。不像其它选项，该选项只是一个标记而<strong>没有值</strong>。只有当一个请求通过 SSL 或 HTTPS 发送时，包含 <code>secure</code> 选项的 cookie 才能随请求发送至服务器。</p><p>格式如下：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Set</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Cookie</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> name</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">Nicholas</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> secure</span></span></code></pre></div><br><h2 id="cookie的维护" tabindex="-1">Cookie的维护 <a class="header-anchor" href="#cookie的维护" aria-label="Permalink to &quot;Cookie的维护&quot;">​</a></h2><p>在一个 cookie 中可以指定任意数量的选项，并且这些选项可以是任意顺序，例如：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Set</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Cookie</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">Nicholas</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> domain</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">nczonline</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">net</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> path</span><span style="color:#89DDFF;">=/</span><span style="color:#A6ACCD;">blog</span></span></code></pre></div><p>这个 cookie 有四个标识符：cookie 的 <code>name</code>，<code>domain</code>，<code>path</code>，<code>secure</code> 标记。要想改变这个 cookie 的值，需要发送另一个具有<strong>相同</strong> cookie <code>name</code>，<code>domain</code>，<code>path</code> 的 <code>Set-Cookie</code> 消息头。例如：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Set</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Cookie</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> name</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">Greg</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> domain</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">nczonline</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">net</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> path</span><span style="color:#89DDFF;">=/</span><span style="color:#A6ACCD;">blog</span></span></code></pre></div><p>如果有任意一项不同，就会创建一个完全不同的新cookie。</p><p>cookie设置项越详细越靠前，越靠前，先生效。</p><br><h2 id="cookie限制条件" tabindex="-1">Cookie限制条件 <a class="header-anchor" href="#cookie限制条件" aria-label="Permalink to &quot;Cookie限制条件&quot;">​</a></h2><p>部分浏览器对cookie条数有所限制，比如Opera限定为30个，IE7限定为50个，Safari和Chrome没有个数限制。发向服务器的所有cookie的最大数据量不能超过：4KB。</p><p>超出部分会被截取掉，不发送至服务器。</p><p>随着浏览器的更新，这些限制可能会有所变化。</p><br><h2 id="javascript中的cookie" tabindex="-1">JavaScript中的cookie <a class="header-anchor" href="#javascript中的cookie" aria-label="Permalink to &quot;JavaScript中的cookie&quot;">​</a></h2><p>通过JavaScript中的<code>document.cookie</code>属性，可以创建、修改、删除cookie。创建cookie时，相当于<code>Set-Cookie</code>消息头；读取cookie时，相当于<code>cookie</code>消息头。</p><p><strong>创建/修改/删除cookie：</strong>这一条语句就全部解决。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cookie</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name=Nicholas;domain=nczonline.net;path=/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>以上代码，并不会删除现已存储在页面中的cookie，它只是简单的创建、修改或删除字符串中指定的cookie。</p><p><strong>获取cookie：</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cookie</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">返回的是所有当前页面下的cookie。格式如下：(别搞丢了 **分号和空格**)</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">name1=Greg; name2=Nicholas; addr=nanjing</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span></code></pre></div><p>所以我们需要手工解析该cookie字符串，来提取指定的cookie项。<a href="http://119.45.114.204:8080/wanglk/blog/ECMAScript/ES3_5/myCookiejs.html" target="_blank" rel="noreferrer">我自己封装的操作Cookie的模块</a></p><p><strong>注意：</strong>一旦 cookie 通过 JavaScript 设置后便不能提取它的选项，所以你将不能知道 <code>domain</code>，<code>path</code>，<code>expires</code> 日期或 <code>secure</code> 标记。(通过浏览器控制台的Application/Cookies可以查看)</p><br><h2 id="httponly" tabindex="-1">HttpOnly <a class="header-anchor" href="#httponly" aria-label="Permalink to &quot;HttpOnly&quot;">​</a></h2><p><code>HttpOnly</code>选项告知浏览器该cookie绝不能通过JavaScript的<code>document.cookie</code>属性访问。这阻止了通过JavaScript发起的跨站脚本攻击(XSS)。</p><p>一旦设置了该选项，该cookie项就不能通过JavaScript操作了。</p><p>格式如下：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Set</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Cookie</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> name</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">Nicholas</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> HttpOnly</span></span></code></pre></div><p>我们不能自己设置<code>HttpOnly</code>，因为我们不能再通过 JavaScript 读取这些 cookie。服务器自己已经设置好了。</p>',65),c=[p];function l(t,r,i,d,C,D){return a(),s("div",null,c)}const h=o(n,[["render",l]]);export{F as __pageData,h as default};
